!pip install transformers
!pip install torch
!pip install tensorflow
!pip install SpeechRecognition pyaudio
## Run this first.
!pip install transformers
from transformers import pipeline

# Internet is required for this
# Voice to text
# While integrating, take special care with the input and output variables.

import speech_recognition as sr

# Implementing KMP string matching algorithm
def KMPSearch(text, pattern):
    """KMP algorithm for searching pattern in text"""
    m, n = len(pattern), len(text)
    
    # Longest prefix suffix (lps) array
    lps = [0] * m
    j = 0  # Index for pattern
    computeLPSArray(pattern, m, lps)

    i = 0  # Index for text
    results = []
    while i < n:
        if pattern[j] == text[i]:
            i += 1
            j += 1
        if j == m:
            results.append(i - j)  # Match found
            j = lps[j - 1]
        elif i < n and pattern[j] != text[i]:
            if j != 0:
                j = lps[j - 1]
            else:
                i += 1
    return results

def computeLPSArray(pattern, m, lps):
    """Preprocessing for KMP: Compute the LPS array"""
    length = 0
    i = 1
    while i < m:
        if pattern[i] == pattern[length]:
            length += 1
            lps[i] = length
            i += 1
        else:
            if length != 0:
                length = lps[length - 1]
            else:
                lps[i] = 0
                i += 1

# Speech to text conversion
recognizer = sr.Recognizer()
with sr.Microphone() as source:
    recognizer.adjust_for_ambient_noise(source)
    print("Listening for speech...")
    audio = recognizer.listen(source)

try:
    print("Recognizing speech...")
    text = recognizer.recognize_google(audio)
    print(f"Recognized: {text}")
except sr.UnknownValueError:
    print("Sorry, I couldn't understand the audio.")
except sr.RequestError as e:
    print(f"Could not request results from Google Speech Recognition service; {e}")

# Sample healthcare-related context for chatbot
context = """
If you have a fever, it could be due to a viral infection, bacterial infection, or an inflammatory condition.
For a headache, causes could include stress, dehydration, sinus issues, or a migraine.
A common cold is caused by a virus and can lead to symptoms such as a runny nose, sore throat, and coughing.
For sore throats, consider warm saltwater gargles, lozenges, or throat sprays. If symptoms persist, consult a doctor.
If you're feeling short of breath, it could indicate asthma, pneumonia, or other respiratory conditions.
Anxiety symptoms can include feelings of nervousness, restlessness, or rapid heartbeat.
For abdominal pain, it could be a sign of a digestive issue like indigestion, ulcers, or food poisoning.
A rash could be a symptom of an allergic reaction, infection, or a skin condition like eczema or psoriasis.
For joint pain, common causes include arthritis, bursitis, or tendonitis.
If you experience chest pain, it could be due to heartburn, muscle strain, or more serious issues like a heart attack.
Always consult a healthcare professional if symptoms are severe or prolonged.
"""

# Now use KMP to search for keywords from speech-to-text output in the context
queries = [text]

# Preprocessing context to search relevant keywords
relevant_sections = []
for query in queries:
    words = query.split()  # Break the query into words
    for word in words:
        matches = KMPSearch(context.lower(), word.lower())  # Search for the word in the context
        if matches:
            relevant_sections.append(f"Word '{word}' found at indices {matches}")

# Print relevant sections found
for section in relevant_sections:
    print(section)

# If needed, integrate this with the question-answering pipeline
qa_pipeline = pipeline("question-answering")
context = " ".join(relevant_sections)  # Use the relevant parts of the context
for question in queries:
    result = qa_pipeline(question=question, context=context)
    print(f"Q: {question}")
    print(f"A: {result['answer']}\n")
